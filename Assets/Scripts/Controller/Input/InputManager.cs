//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace GeoViewer.Controller.Input
{
    public partial class @InputManager: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputManager()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input"",
    ""maps"": [
        {
            ""name"": ""Release"",
            ""id"": ""8ad9bc18-8b76-4fd8-a5f0-6d37cbf773b3"",
            ""actions"": [
                {
                    ""name"": ""Mouse Move"",
                    ""type"": ""Value"",
                    ""id"": ""e931bf36-a4f7-4ddd-a4d9-77eebefdc2c7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hold Left"",
                    ""type"": ""Button"",
                    ""id"": ""39ce6e19-1cc1-4e05-b191-84915e2abdb1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.01)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold Right"",
                    ""type"": ""Button"",
                    ""id"": ""56baeca2-e477-4b75-ae77-1a44f2d28fa5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.01)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Keyboard Move"",
                    ""type"": ""Value"",
                    ""id"": ""fca30d6b-df3c-4304-9451-3c7afcc2e430"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""60078d82-f36d-4c10-b5d6-8ec6456350e8"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click Left"",
                    ""type"": ""Button"",
                    ""id"": ""f45cb24e-6ca1-4c51-8d1a-759b6a36fb68"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click Right"",
                    ""type"": ""Button"",
                    ""id"": ""4f309e43-333a-4fd2-82d8-e1f47ef64a64"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold Shift"",
                    ""type"": ""Value"",
                    ""id"": ""c652d5f2-a2cb-4ea4-ae3a-0160c3d1bd41"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hold Alt"",
                    ""type"": ""Value"",
                    ""id"": ""d205e7b7-5f12-400d-a66d-4f4d4914d698"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Undo"",
                    ""type"": ""Button"",
                    ""id"": ""2e6f0e9a-cdff-424d-88ce-7947caa4f820"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Redo"",
                    ""type"": ""Button"",
                    ""id"": ""0625568c-0fe2-4da0-a4be-40aa1797b6bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Mouse"",
                    ""id"": ""41c8aff9-f424-4e06-beef-e366d82923d3"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""68de43e1-3ee9-42bf-b567-51122cbff083"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""474e5411-6223-4fe5-a285-cad9f66e340b"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8aadb2af-86e4-44f5-8251-c666ccd4a7a4"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""414953e2-a1c2-4e42-af74-3a1319e88736"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a5814ac6-6d47-428c-9e92-8b518d85d62e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e05f5a9b-d490-4fd0-a127-b570ca152e7d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""dbcad7d0-8b05-4864-8b92-072e61c0778b"",
                    ""path"": ""3DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a829237c-b7b1-4160-a414-84c114bfeb32"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""46c5c6aa-771e-40bb-9810-f85b131248a9"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3389901c-1ae6-4201-8599-12d2e7d973e1"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ed81de2a-14f2-476c-ad5f-06c029e08f87"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""f7c80165-f08f-4859-ad47-a1248d62b21d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""4c8c02c2-565a-4ad5-bde8-f22cf94d19a3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e00c1cfc-4d34-4b5f-a5d9-0872b3e5ae58"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b508d93d-2fa9-41d0-a73d-ff34fcde0f15"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70d7d6f2-fbc4-4e2b-a0c5-d720ba947c07"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6465e29-6080-4450-937e-c48398dde1c8"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8da5e5c1-42f4-4216-8298-d8daea17b6ab"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Alt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Control"",
                    ""id"": ""8af0c3a4-898a-49fe-b08c-0c176ff1fbe6"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""662d28bc-27f2-4f5b-92e1-624b1f7abe78"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""baf8ab3f-9ed8-4b39-ae61-7b45fda28560"",
                    ""path"": ""<Keyboard>/#(Z)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Control"",
                    ""id"": ""a25d6fa1-e9fb-4b59-90c6-3385fecf3c33"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Redo"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""9422ecc0-eb19-4177-8b01-21de9158341c"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Redo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""72b75025-be37-49f1-a52e-f96afc38d7df"",
                    ""path"": ""<Keyboard>/#(Y)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Redo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Editor"",
            ""id"": ""8131a992-dbde-4fc1-a204-c0a76620e6bc"",
            ""actions"": [
                {
                    ""name"": ""Mouse Move"",
                    ""type"": ""Value"",
                    ""id"": ""89af0478-5483-4201-bbe9-89b106bbf6a6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hold Left"",
                    ""type"": ""Button"",
                    ""id"": ""00913501-b289-41dd-b3c2-e569f73aa57d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.01)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold Right"",
                    ""type"": ""Button"",
                    ""id"": ""8da1bf8a-460b-455c-b56d-76c3564707a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.01)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Keyboard Move"",
                    ""type"": ""Value"",
                    ""id"": ""489f780a-1f54-425e-afd6-71014ce77edc"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""6150e1f9-7f27-4130-be6e-45de5650a65c"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click Left"",
                    ""type"": ""Button"",
                    ""id"": ""3243fb37-d969-4108-ba11-348775687474"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click Right"",
                    ""type"": ""Button"",
                    ""id"": ""43feda01-105c-42c2-a656-afacc55c925f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold Shift"",
                    ""type"": ""Value"",
                    ""id"": ""2c1ec7a1-758c-401d-82f4-9f166129c13e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hold Alt"",
                    ""type"": ""Value"",
                    ""id"": ""c03c2702-be5a-4f42-b9ea-70ae192285d5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Undo"",
                    ""type"": ""Button"",
                    ""id"": ""cca33f8d-ad64-4909-9ee8-2cf3c7c4d499"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Redo"",
                    ""type"": ""Button"",
                    ""id"": ""0145a1e4-9565-49de-aa84-cdc63fbd3c9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Mouse"",
                    ""id"": ""0e764651-81a5-45ef-8f14-c2733c4db19d"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f8e41555-f768-4df6-adbd-453c79c3c49f"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d8779b71-212c-4440-83ab-19d091f178b4"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""05cbd5c4-24c0-4a22-bcec-6b675ec639cb"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f8fd62e1-e0b9-4382-87ba-298252f92c81"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8f61f3c3-e51e-4adf-8019-40df718e5ee2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47e6d049-2233-4eb2-b6e5-60ba41887083"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""39354616-b8e3-4763-b626-bf6ddb81a23f"",
                    ""path"": ""3DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""95417432-e562-4647-bd1e-8a4b6e3a1b5d"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""89c16cd6-c10b-4ad0-bc95-5e8e0421e137"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b01fd9ec-5549-4cf8-b7b7-8b2e094e41fc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""106fd646-47ff-4644-aee8-ecf59df778e3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""15bced29-162c-42fc-8d28-f73c7852b9be"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""9d4cbf9d-aa5b-4297-bb61-b4a0f56ec22a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""08437e9a-368a-4f41-9b2e-c5cae0159198"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8bd1f48-ed4a-4e61-b364-98c95df2046c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f58da0fc-9257-443f-9d75-5835408b8edc"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0b9f9f6-5dd0-4853-835a-03c3dbfe165f"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7e678c6-12e6-4e5c-9bf6-ed62afd25651"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold Alt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Control"",
                    ""id"": ""1c705ef4-b1b6-4913-bc83-d448cbe509d1"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""adc378b7-3a7f-4f1d-9a19-c48e25ea42fa"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""f40f5d0d-5c1a-4698-9207-443c7ee1eda2"",
                    ""path"": ""<Keyboard>/#(Z)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Control"",
                    ""id"": ""34fbe028-5ecf-4fd8-b579-cdfb22d35e3e"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Redo"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""f70107d6-e869-4430-8bea-f0074e5336c5"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Redo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""95fb425c-4e66-418b-bbad-17941763f7ab"",
                    ""path"": ""<Keyboard>/#(Y)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Redo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Release
            m_Release = asset.FindActionMap("Release", throwIfNotFound: true);
            m_Release_MouseMove = m_Release.FindAction("Mouse Move", throwIfNotFound: true);
            m_Release_HoldLeft = m_Release.FindAction("Hold Left", throwIfNotFound: true);
            m_Release_HoldRight = m_Release.FindAction("Hold Right", throwIfNotFound: true);
            m_Release_KeyboardMove = m_Release.FindAction("Keyboard Move", throwIfNotFound: true);
            m_Release_Zoom = m_Release.FindAction("Zoom", throwIfNotFound: true);
            m_Release_ClickLeft = m_Release.FindAction("Click Left", throwIfNotFound: true);
            m_Release_ClickRight = m_Release.FindAction("Click Right", throwIfNotFound: true);
            m_Release_HoldShift = m_Release.FindAction("Hold Shift", throwIfNotFound: true);
            m_Release_HoldAlt = m_Release.FindAction("Hold Alt", throwIfNotFound: true);
            m_Release_Undo = m_Release.FindAction("Undo", throwIfNotFound: true);
            m_Release_Redo = m_Release.FindAction("Redo", throwIfNotFound: true);
            // Editor
            m_Editor = asset.FindActionMap("Editor", throwIfNotFound: true);
            m_Editor_MouseMove = m_Editor.FindAction("Mouse Move", throwIfNotFound: true);
            m_Editor_HoldLeft = m_Editor.FindAction("Hold Left", throwIfNotFound: true);
            m_Editor_HoldRight = m_Editor.FindAction("Hold Right", throwIfNotFound: true);
            m_Editor_KeyboardMove = m_Editor.FindAction("Keyboard Move", throwIfNotFound: true);
            m_Editor_Zoom = m_Editor.FindAction("Zoom", throwIfNotFound: true);
            m_Editor_ClickLeft = m_Editor.FindAction("Click Left", throwIfNotFound: true);
            m_Editor_ClickRight = m_Editor.FindAction("Click Right", throwIfNotFound: true);
            m_Editor_HoldShift = m_Editor.FindAction("Hold Shift", throwIfNotFound: true);
            m_Editor_HoldAlt = m_Editor.FindAction("Hold Alt", throwIfNotFound: true);
            m_Editor_Undo = m_Editor.FindAction("Undo", throwIfNotFound: true);
            m_Editor_Redo = m_Editor.FindAction("Redo", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Release
        private readonly InputActionMap m_Release;
        private List<IReleaseActions> m_ReleaseActionsCallbackInterfaces = new List<IReleaseActions>();
        private readonly InputAction m_Release_MouseMove;
        private readonly InputAction m_Release_HoldLeft;
        private readonly InputAction m_Release_HoldRight;
        private readonly InputAction m_Release_KeyboardMove;
        private readonly InputAction m_Release_Zoom;
        private readonly InputAction m_Release_ClickLeft;
        private readonly InputAction m_Release_ClickRight;
        private readonly InputAction m_Release_HoldShift;
        private readonly InputAction m_Release_HoldAlt;
        private readonly InputAction m_Release_Undo;
        private readonly InputAction m_Release_Redo;
        public struct ReleaseActions
        {
            private @InputManager m_Wrapper;
            public ReleaseActions(@InputManager wrapper) { m_Wrapper = wrapper; }
            public InputAction @MouseMove => m_Wrapper.m_Release_MouseMove;
            public InputAction @HoldLeft => m_Wrapper.m_Release_HoldLeft;
            public InputAction @HoldRight => m_Wrapper.m_Release_HoldRight;
            public InputAction @KeyboardMove => m_Wrapper.m_Release_KeyboardMove;
            public InputAction @Zoom => m_Wrapper.m_Release_Zoom;
            public InputAction @ClickLeft => m_Wrapper.m_Release_ClickLeft;
            public InputAction @ClickRight => m_Wrapper.m_Release_ClickRight;
            public InputAction @HoldShift => m_Wrapper.m_Release_HoldShift;
            public InputAction @HoldAlt => m_Wrapper.m_Release_HoldAlt;
            public InputAction @Undo => m_Wrapper.m_Release_Undo;
            public InputAction @Redo => m_Wrapper.m_Release_Redo;
            public InputActionMap Get() { return m_Wrapper.m_Release; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ReleaseActions set) { return set.Get(); }
            public void AddCallbacks(IReleaseActions instance)
            {
                if (instance == null || m_Wrapper.m_ReleaseActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_ReleaseActionsCallbackInterfaces.Add(instance);
                @MouseMove.started += instance.OnMouseMove;
                @MouseMove.performed += instance.OnMouseMove;
                @MouseMove.canceled += instance.OnMouseMove;
                @HoldLeft.started += instance.OnHoldLeft;
                @HoldLeft.performed += instance.OnHoldLeft;
                @HoldLeft.canceled += instance.OnHoldLeft;
                @HoldRight.started += instance.OnHoldRight;
                @HoldRight.performed += instance.OnHoldRight;
                @HoldRight.canceled += instance.OnHoldRight;
                @KeyboardMove.started += instance.OnKeyboardMove;
                @KeyboardMove.performed += instance.OnKeyboardMove;
                @KeyboardMove.canceled += instance.OnKeyboardMove;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @ClickLeft.started += instance.OnClickLeft;
                @ClickLeft.performed += instance.OnClickLeft;
                @ClickLeft.canceled += instance.OnClickLeft;
                @ClickRight.started += instance.OnClickRight;
                @ClickRight.performed += instance.OnClickRight;
                @ClickRight.canceled += instance.OnClickRight;
                @HoldShift.started += instance.OnHoldShift;
                @HoldShift.performed += instance.OnHoldShift;
                @HoldShift.canceled += instance.OnHoldShift;
                @HoldAlt.started += instance.OnHoldAlt;
                @HoldAlt.performed += instance.OnHoldAlt;
                @HoldAlt.canceled += instance.OnHoldAlt;
                @Undo.started += instance.OnUndo;
                @Undo.performed += instance.OnUndo;
                @Undo.canceled += instance.OnUndo;
                @Redo.started += instance.OnRedo;
                @Redo.performed += instance.OnRedo;
                @Redo.canceled += instance.OnRedo;
            }

            private void UnregisterCallbacks(IReleaseActions instance)
            {
                @MouseMove.started -= instance.OnMouseMove;
                @MouseMove.performed -= instance.OnMouseMove;
                @MouseMove.canceled -= instance.OnMouseMove;
                @HoldLeft.started -= instance.OnHoldLeft;
                @HoldLeft.performed -= instance.OnHoldLeft;
                @HoldLeft.canceled -= instance.OnHoldLeft;
                @HoldRight.started -= instance.OnHoldRight;
                @HoldRight.performed -= instance.OnHoldRight;
                @HoldRight.canceled -= instance.OnHoldRight;
                @KeyboardMove.started -= instance.OnKeyboardMove;
                @KeyboardMove.performed -= instance.OnKeyboardMove;
                @KeyboardMove.canceled -= instance.OnKeyboardMove;
                @Zoom.started -= instance.OnZoom;
                @Zoom.performed -= instance.OnZoom;
                @Zoom.canceled -= instance.OnZoom;
                @ClickLeft.started -= instance.OnClickLeft;
                @ClickLeft.performed -= instance.OnClickLeft;
                @ClickLeft.canceled -= instance.OnClickLeft;
                @ClickRight.started -= instance.OnClickRight;
                @ClickRight.performed -= instance.OnClickRight;
                @ClickRight.canceled -= instance.OnClickRight;
                @HoldShift.started -= instance.OnHoldShift;
                @HoldShift.performed -= instance.OnHoldShift;
                @HoldShift.canceled -= instance.OnHoldShift;
                @HoldAlt.started -= instance.OnHoldAlt;
                @HoldAlt.performed -= instance.OnHoldAlt;
                @HoldAlt.canceled -= instance.OnHoldAlt;
                @Undo.started -= instance.OnUndo;
                @Undo.performed -= instance.OnUndo;
                @Undo.canceled -= instance.OnUndo;
                @Redo.started -= instance.OnRedo;
                @Redo.performed -= instance.OnRedo;
                @Redo.canceled -= instance.OnRedo;
            }

            public void RemoveCallbacks(IReleaseActions instance)
            {
                if (m_Wrapper.m_ReleaseActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IReleaseActions instance)
            {
                foreach (var item in m_Wrapper.m_ReleaseActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_ReleaseActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public ReleaseActions @Release => new ReleaseActions(this);

        // Editor
        private readonly InputActionMap m_Editor;
        private List<IEditorActions> m_EditorActionsCallbackInterfaces = new List<IEditorActions>();
        private readonly InputAction m_Editor_MouseMove;
        private readonly InputAction m_Editor_HoldLeft;
        private readonly InputAction m_Editor_HoldRight;
        private readonly InputAction m_Editor_KeyboardMove;
        private readonly InputAction m_Editor_Zoom;
        private readonly InputAction m_Editor_ClickLeft;
        private readonly InputAction m_Editor_ClickRight;
        private readonly InputAction m_Editor_HoldShift;
        private readonly InputAction m_Editor_HoldAlt;
        private readonly InputAction m_Editor_Undo;
        private readonly InputAction m_Editor_Redo;
        public struct EditorActions
        {
            private @InputManager m_Wrapper;
            public EditorActions(@InputManager wrapper) { m_Wrapper = wrapper; }
            public InputAction @MouseMove => m_Wrapper.m_Editor_MouseMove;
            public InputAction @HoldLeft => m_Wrapper.m_Editor_HoldLeft;
            public InputAction @HoldRight => m_Wrapper.m_Editor_HoldRight;
            public InputAction @KeyboardMove => m_Wrapper.m_Editor_KeyboardMove;
            public InputAction @Zoom => m_Wrapper.m_Editor_Zoom;
            public InputAction @ClickLeft => m_Wrapper.m_Editor_ClickLeft;
            public InputAction @ClickRight => m_Wrapper.m_Editor_ClickRight;
            public InputAction @HoldShift => m_Wrapper.m_Editor_HoldShift;
            public InputAction @HoldAlt => m_Wrapper.m_Editor_HoldAlt;
            public InputAction @Undo => m_Wrapper.m_Editor_Undo;
            public InputAction @Redo => m_Wrapper.m_Editor_Redo;
            public InputActionMap Get() { return m_Wrapper.m_Editor; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(EditorActions set) { return set.Get(); }
            public void AddCallbacks(IEditorActions instance)
            {
                if (instance == null || m_Wrapper.m_EditorActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_EditorActionsCallbackInterfaces.Add(instance);
                @MouseMove.started += instance.OnMouseMove;
                @MouseMove.performed += instance.OnMouseMove;
                @MouseMove.canceled += instance.OnMouseMove;
                @HoldLeft.started += instance.OnHoldLeft;
                @HoldLeft.performed += instance.OnHoldLeft;
                @HoldLeft.canceled += instance.OnHoldLeft;
                @HoldRight.started += instance.OnHoldRight;
                @HoldRight.performed += instance.OnHoldRight;
                @HoldRight.canceled += instance.OnHoldRight;
                @KeyboardMove.started += instance.OnKeyboardMove;
                @KeyboardMove.performed += instance.OnKeyboardMove;
                @KeyboardMove.canceled += instance.OnKeyboardMove;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @ClickLeft.started += instance.OnClickLeft;
                @ClickLeft.performed += instance.OnClickLeft;
                @ClickLeft.canceled += instance.OnClickLeft;
                @ClickRight.started += instance.OnClickRight;
                @ClickRight.performed += instance.OnClickRight;
                @ClickRight.canceled += instance.OnClickRight;
                @HoldShift.started += instance.OnHoldShift;
                @HoldShift.performed += instance.OnHoldShift;
                @HoldShift.canceled += instance.OnHoldShift;
                @HoldAlt.started += instance.OnHoldAlt;
                @HoldAlt.performed += instance.OnHoldAlt;
                @HoldAlt.canceled += instance.OnHoldAlt;
                @Undo.started += instance.OnUndo;
                @Undo.performed += instance.OnUndo;
                @Undo.canceled += instance.OnUndo;
                @Redo.started += instance.OnRedo;
                @Redo.performed += instance.OnRedo;
                @Redo.canceled += instance.OnRedo;
            }

            private void UnregisterCallbacks(IEditorActions instance)
            {
                @MouseMove.started -= instance.OnMouseMove;
                @MouseMove.performed -= instance.OnMouseMove;
                @MouseMove.canceled -= instance.OnMouseMove;
                @HoldLeft.started -= instance.OnHoldLeft;
                @HoldLeft.performed -= instance.OnHoldLeft;
                @HoldLeft.canceled -= instance.OnHoldLeft;
                @HoldRight.started -= instance.OnHoldRight;
                @HoldRight.performed -= instance.OnHoldRight;
                @HoldRight.canceled -= instance.OnHoldRight;
                @KeyboardMove.started -= instance.OnKeyboardMove;
                @KeyboardMove.performed -= instance.OnKeyboardMove;
                @KeyboardMove.canceled -= instance.OnKeyboardMove;
                @Zoom.started -= instance.OnZoom;
                @Zoom.performed -= instance.OnZoom;
                @Zoom.canceled -= instance.OnZoom;
                @ClickLeft.started -= instance.OnClickLeft;
                @ClickLeft.performed -= instance.OnClickLeft;
                @ClickLeft.canceled -= instance.OnClickLeft;
                @ClickRight.started -= instance.OnClickRight;
                @ClickRight.performed -= instance.OnClickRight;
                @ClickRight.canceled -= instance.OnClickRight;
                @HoldShift.started -= instance.OnHoldShift;
                @HoldShift.performed -= instance.OnHoldShift;
                @HoldShift.canceled -= instance.OnHoldShift;
                @HoldAlt.started -= instance.OnHoldAlt;
                @HoldAlt.performed -= instance.OnHoldAlt;
                @HoldAlt.canceled -= instance.OnHoldAlt;
                @Undo.started -= instance.OnUndo;
                @Undo.performed -= instance.OnUndo;
                @Undo.canceled -= instance.OnUndo;
                @Redo.started -= instance.OnRedo;
                @Redo.performed -= instance.OnRedo;
                @Redo.canceled -= instance.OnRedo;
            }

            public void RemoveCallbacks(IEditorActions instance)
            {
                if (m_Wrapper.m_EditorActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IEditorActions instance)
            {
                foreach (var item in m_Wrapper.m_EditorActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_EditorActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public EditorActions @Editor => new EditorActions(this);
        public interface IReleaseActions
        {
            void OnMouseMove(InputAction.CallbackContext context);
            void OnHoldLeft(InputAction.CallbackContext context);
            void OnHoldRight(InputAction.CallbackContext context);
            void OnKeyboardMove(InputAction.CallbackContext context);
            void OnZoom(InputAction.CallbackContext context);
            void OnClickLeft(InputAction.CallbackContext context);
            void OnClickRight(InputAction.CallbackContext context);
            void OnHoldShift(InputAction.CallbackContext context);
            void OnHoldAlt(InputAction.CallbackContext context);
            void OnUndo(InputAction.CallbackContext context);
            void OnRedo(InputAction.CallbackContext context);
        }
        public interface IEditorActions
        {
            void OnMouseMove(InputAction.CallbackContext context);
            void OnHoldLeft(InputAction.CallbackContext context);
            void OnHoldRight(InputAction.CallbackContext context);
            void OnKeyboardMove(InputAction.CallbackContext context);
            void OnZoom(InputAction.CallbackContext context);
            void OnClickLeft(InputAction.CallbackContext context);
            void OnClickRight(InputAction.CallbackContext context);
            void OnHoldShift(InputAction.CallbackContext context);
            void OnHoldAlt(InputAction.CallbackContext context);
            void OnUndo(InputAction.CallbackContext context);
            void OnRedo(InputAction.CallbackContext context);
        }
    }
}
